<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/cache
        http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

        <context:component-scan base-package="com.spring.test.api.service,com.spring.test.api.dao">
                <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        </context:component-scan>

        <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
                <!-- 数据库基本信息配置 -->
                <property name="url" value="${mysql.url}" />
                <property name="username" value="${username}" />
                <property name="password" value="${password}" />
                <property name="driverClassName" value="${driverClassName}" />
                <property name="filters" value="${filters}" />
                <!-- 最大并发连接数 -->
                <property name="maxActive" value="${maxActive}" />
                <!-- 初始化连接数量 -->
                <property name="initialSize" value="${initialSize}" />
                <!-- 配置获取连接等待超时的时间 -->
                <property name="maxWait" value="${maxWait}" />
                <!-- 最小空闲连接数 -->
                <property name="minIdle" value="${minIdle}" />
                <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
                <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
                <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
                <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
                <property name="validationQuery" value="${validationQuery}" />
                <property name="testWhileIdle" value="${testWhileIdle}" />
                <property name="testOnBorrow" value="${testOnBorrow}" />
                <property name="testOnReturn" value="${testOnReturn}" />
                <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
                <!-- 打开removeAbandoned功能 -->
                <property name="removeAbandoned" value="${removeAbandoned}" />
                <!-- 1800秒，也就是30分钟 -->
                <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
                <!-- 关闭abanded连接时输出错误日志 -->
                <property name="logAbandoned" value="${logAbandoned}" />
        </bean>

        <!--mybatis-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
                <!--<property name="configLocation" value="classpath:MyBatis-Configuration.xml"></property>-->
                <!-- sql 文件 xxxMapper.xml的位置 -->
                <property name="mapperLocations" value="classpath*:mapper/*Mapper.xml" />
                <property name="dataSource" ref="dataSource" />
        </bean>

        <!-- 配置SQLSession模板 -->
        <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
                <constructor-arg index="0" ref="sqlSessionFactory"/>
        </bean>

        <!--MapperScannerConfigurer配置-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <!--basePackage指定要扫描的包，在此包之下的映射器(即是mapper.xml文件对应的mapper接口)都会被
	     搜索到。可指定多个包，包与包之间用逗号或分号分隔-->
                <property name="basePackage" value="com.spring.test.api.mapper"/>
        </bean>

        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource" ref="dataSource"/>
        </bean>

        <bean id="springBeanLocator" class="com.spring.test.api.SpringBeanLocator" scope="singleton"/>
</beans>